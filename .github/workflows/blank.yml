name: Desplegar Frontend a Docker Hub y Servidor

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Definir nombre de la imagen y versiÃ³n
        run: |
          IMAGE_NAME="baumanpeter/humberto:humbertofrontend"
          VERSION="v${{ github.run_number }}"
          IMAGE_VERSION="$IMAGE_NAME-$VERSION"
          CONTAINER_NAME="humbertofrontend-$VERSION"
          echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV
          echo "CONTAINER_NAME=$CONTAINER_NAME" >> $GITHUB_ENV
          echo "âœ… Nombre de imagen: $IMAGE_VERSION"
          echo "âœ… Nombre de contenedor: $CONTAINER_NAME"

      - name: Verificar contenido del directorio
        run: ls -l .

      - name: Construir imagen Docker y cargarla localmente
        run: |
          echo "ðŸš€ Construyendo la imagen Docker..."
          docker buildx build --platform linux/amd64 --no-cache --load -t $IMAGE_VERSION .
          echo "âœ… Imagen construida y cargada localmente."

      - name: Subir imagen a Docker Hub
        run: |
          echo "ðŸ“¤ Subiendo la imagen a Docker Hub..."
          docker push $IMAGE_VERSION
          echo "âœ… Imagen subida correctamente."

      - name: Desplegar al servidor remoto
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "ðŸ“¥ Iniciando despliegue remoto del frontend..."
            docker pull $IMAGE_VERSION

            echo "ðŸ§¹ Eliminando versiones anteriores del contenedor (solo producciÃ³n)..."
            docker ps -a --format "{{.Names}}" | grep "^humbertofrontend-v" | while read cname; do
              docker stop "$cname" || true
              docker rm "$cname" || true
            done

            echo "ðŸš€ Corriendo nuevo contenedor: $CONTAINER_NAME"
            docker run -d --name $CONTAINER_NAME -p 3000:3000 $IMAGE_VERSION

            echo "âœ… Nuevo contenedor en ejecuciÃ³n: $CONTAINER_NAME"

