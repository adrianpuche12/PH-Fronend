name: Desplegar Frontend a Docker Hub

on:
  push:
    branches:
      - master  # Ejecuta el workflow cuando hay un push a la rama "master"
      - dev     # Ejecuta el workflow cuando hay un push a la rama "dev"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production  # Asigna el Environment llamado "production"

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Iniciar sesiÃ³n en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Obtener nombre de la rama
        id: branch_name
        run: |
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "ðŸ”– Rama detectada: ${GITHUB_REF#refs/heads/}"

      - name: Definir etiqueta de imagen
        run: |
          echo "ðŸ”¢ Configurando versiÃ³n de la imagen..."
          if [ "${{ env.BRANCH_NAME }}" = "master" ]; then
            IMAGE_NAME="baumanpeter/humberto:humbertofrontend"
          else
            IMAGE_NAME="baumanpeter/humberto:humbertofrontend-dev"
          fi
          IMAGE_VERSION="$IMAGE_NAME-v${{ github.run_number }}"
          echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV
          echo "âœ… Imagen con versiÃ³n: $IMAGE_VERSION"

      - name: Verificar contenido del directorio
        run: ls -l .

      - name: Construir imagen Docker y cargarla localmente
        run: |
          echo "ðŸš€ Construyendo la imagen Docker para la rama ${{ env.BRANCH_NAME }}..."
          docker buildx build --platform linux/amd64 --load -t $IMAGE_VERSION .
          echo "âœ… Imagen construida y cargada en Docker local."

      - name: Listar imÃ¡genes Docker (depuraciÃ³n)
        run: docker images

      - name: Subir imagen Docker a Docker Hub
        run: |
          echo "ðŸ“¤ Subiendo la imagen a Docker Hub..."
          docker push $IMAGE_VERSION
          echo "âœ… Imagen subida exitosamente a Docker Hub para la rama ${{ env.BRANCH_NAME }}."